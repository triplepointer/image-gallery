[{"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\App.tsx":"1","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\reportWebVitals.ts":"2","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\components\\ImageGallery\\index.tsx":"3","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\GridSystem\\utils.ts":"4","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\index.tsx":"5","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\store.ts":"6","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\reducers\\Form\\reducers.ts":"7","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\components\\Form\\index.tsx":"8","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\reducers\\ImageGallery\\reducers.ts":"9","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\reducers\\Form\\actions.ts":"10","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\reducers\\ImageGallery\\actions.ts":"11","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\GridSystem\\index.tsx":"12"},{"size":892,"mtime":1611665049081,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1611258143154,"results":"15","hashOfConfig":"14"},{"size":1825,"mtime":1611669052111,"results":"16","hashOfConfig":"14"},{"size":2980,"mtime":1611605754038,"results":"17","hashOfConfig":"14"},{"size":624,"mtime":1611663194928,"results":"18","hashOfConfig":"14"},{"size":503,"mtime":1611622250069,"results":"19","hashOfConfig":"14"},{"size":374,"mtime":1611660609087,"results":"20","hashOfConfig":"14"},{"size":951,"mtime":1611665491601,"results":"21","hashOfConfig":"14"},{"size":615,"mtime":1611660518694,"results":"22","hashOfConfig":"14"},{"size":809,"mtime":1611661163990,"results":"23","hashOfConfig":"14"},{"size":1767,"mtime":1611668823650,"results":"24","hashOfConfig":"14"},{"size":3459,"mtime":1611667834938,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1uw02au",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\App.tsx",["52","53"],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\reportWebVitals.ts",[],["54","55"],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\components\\ImageGallery\\index.tsx",[],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\GridSystem\\utils.ts",["56"],"import { cloneDeep, reduce } from 'lodash';\r\nimport { DefaultProps, Image, ProcessedImage } from './interfaces';\r\n\r\nexport function getRowHeight(\r\n  images: Image[],\r\n  width: number,\r\n  gutter: number\r\n): number {\r\n  const realWidth: number = width - images.length * gutter + gutter;\r\n  const ratio: number = images.reduce((sum: number, image: Image) => {\r\n    sum += image.width / image.height;\r\n    return sum;\r\n  }, 0);\r\n\r\n  return realWidth / ratio;\r\n}\r\n\r\n/**\r\n * Curate image list according to setting\r\n */\r\nexport const curateImageList = (\r\n  images: Image[],\r\n  width: number,\r\n  setting: DefaultProps\r\n): ProcessedImage[] => {\r\n  const { gutter, rows, maxRowHeight, showIncompleteRow } = setting;\r\n  const rowWidth = width;\r\n\r\n  let imageList = cloneDeep(images);\r\n  let processedImageList: ProcessedImage[] = [];\r\n  let rowIndex = 0;\r\n  let currentHeight: number = 0;\r\n\r\n  while (imageList.length > 0 && (rows === undefined || rows > rowIndex)) {\r\n    let height: number = 0;\r\n    let isFulfilled: boolean = false;\r\n    let offset: number = 0;\r\n    let selectedImages: Image[] = [];\r\n    imageList.some(() => {\r\n      selectedImages = imageList.slice(0, offset + 1);\r\n      height = getRowHeight(selectedImages, rowWidth, gutter);\r\n      isFulfilled = height <= maxRowHeight;\r\n      if (!isFulfilled) {\r\n        offset += 1;\r\n        return false;\r\n      }\r\n      processedImageList = updateProcessedImageList(\r\n        processedImageList,\r\n        selectedImages,\r\n        height,\r\n        currentHeight,\r\n        rowIndex,\r\n        gutter\r\n      );\r\n      currentHeight += height + gutter;\r\n      return true;\r\n    });\r\n\r\n    if (!isFulfilled) {\r\n      if (showIncompleteRow) {\r\n        processedImageList = updateProcessedImageList(\r\n          processedImageList,\r\n          selectedImages,\r\n          maxRowHeight,\r\n          currentHeight,\r\n          rowIndex,\r\n          gutter\r\n        );\r\n      }\r\n\r\n      return processedImageList;\r\n    }\r\n\r\n    imageList = cloneDeep(images).slice(processedImageList.length);\r\n    rowIndex += 1;\r\n  }\r\n\r\n  return processedImageList;\r\n};\r\n\r\nexport function updateProcessedImageList(\r\n  processImageList: ProcessedImage[],\r\n  selectedImages: Image[],\r\n  rowHeight: number,\r\n  currentHeight: number,\r\n  rowIndex: number,\r\n  gutterWidth: number\r\n): ProcessedImage[] {\r\n  let currentWidth: number = 0;\r\n  processImageList = reduce(\r\n    selectedImages,\r\n    (result, imageItem, i) => {\r\n      const ratio: number = rowHeight / imageItem.height;\r\n      const width: number = imageItem.width * ratio;\r\n      const left: number = i === 0 ? 0 : currentWidth;\r\n      const top: number = currentHeight;\r\n      currentWidth += width + gutterWidth;\r\n\r\n      result.push({\r\n        url: imageItem.url,\r\n        width,\r\n        height: rowHeight,\r\n        rowOffset: rowIndex,\r\n        left,\r\n        top,\r\n        originalData: imageItem\r\n      });\r\n\r\n      return result;\r\n    },\r\n    processImageList\r\n  );\r\n\r\n  return processImageList;\r\n}","C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\index.tsx",[],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\store.ts",[],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\reducers\\Form\\reducers.ts",[],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\components\\Form\\index.tsx",[],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\reducers\\ImageGallery\\reducers.ts",[],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\reducers\\Form\\actions.ts",[],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\store\\reducers\\ImageGallery\\actions.ts",[],"C:\\Users\\triplepointer\\Desktop\\Верстка\\Тестовые\\Тестовое-Ecwid\\image-gallery\\src\\GridSystem\\index.tsx",["57"],{"ruleId":"58","severity":1,"message":"59","line":17,"column":6,"nodeType":"60","endLine":17,"endColumn":38,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":17,"column":7,"nodeType":"63","endLine":17,"endColumn":37},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":39,"column":20,"nodeType":"70","messageId":"71","endLine":57,"endColumn":6},{"ruleId":"72","severity":1,"message":"73","line":123,"column":15,"nodeType":"74","endLine":127,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setImagesActionCreator'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'imageList', 'processedImageList', 'processedImageList', 'currentHeight', 'rowIndex', 'currentHeight'.","ArrowFunctionExpression","unsafeRefs","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"78","fix":"79"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [setImagesActionCreator]",{"range":"80","text":"81"},[558,590],"[setImagesActionCreator]"]